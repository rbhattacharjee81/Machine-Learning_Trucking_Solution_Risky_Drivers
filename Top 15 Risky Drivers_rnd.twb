<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='riskfactor (default.riskfactor) (default)' inline='true' name='federated.0tew4tt1gky89j14slaav0yubkj1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='10.182.131.201' name='hadoophive.0v7q0iy0g1vfpp1bypnwh028bnq4'>
            <connection authentication='no' authentication-type='0' class='hadoophive' connection-type='Impala' dbname='' odbc-connect-string-extras='' one-time-sql='' port='21050' schema='default' server='10.182.131.201' sslcert='' sslmode='' transport-type='0'>
              <connection-customization class='hadoophive' enabled='false' version='18.1'>
                <vendor name='hadoophive' />
                <driver name='hadoophive' />
                <customizations>
                  <customization name='CAP_AUTH_DB_IMPERSONATE' value='yes' />
                  <customization name='CAP_AUTH_KERBEROS_IMPERSONATE' value='yes' />
                  <customization name='CAP_COLLECT_TABLE_STATISTICS' value='no' />
                  <customization name='CAP_CONNECT_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_CREATE_TEMP_TABLES' value='no' />
                  <customization name='CAP_DATASERVER_MAGIC_NUMBER' value='no' />
                  <customization name='CAP_DEFERS_CONNECTION_VERIFICATION' value='no' />
                  <customization name='CAP_DISABLE_EXTRACT_TABLE_INDEXING' value='no' />
                  <customization name='CAP_EQUALITY_JOINS_ONLY' value='no' />
                  <customization name='CAP_EQUIJOINS_ONLY' value='no' />
                  <customization name='CAP_FAST_METADATA' value='no' />
                  <customization name='CAP_FORCE_COUNT_FOR_NUMBEROFRECORDS' value='no' />
                  <customization name='CAP_GREENPLUM_TRUST_METADATA_CONTAINSNULL' value='no' />
                  <customization name='CAP_HIVE_FIX_METADATA_NAMES' value='no' />
                  <customization name='CAP_INDEX_TEMP_TABLES' value='no' />
                  <customization name='CAP_INSERT_TEMP_EXEC_STORED_PROCEDURE' value='no' />
                  <customization name='CAP_JDBC_QUERY_USE_PREPARE_PARAMETER_MARKER' value='no' />
                  <customization name='CAP_LOCAL_ALIASES_CASE_INSENSITIVE' value='no' />
                  <customization name='CAP_ODBC_ALWAYS_THROW_CONNECT_ERRORS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATETIME_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_DATE_AS_CHAR' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MAX_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_MEDIUM_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SIGNED' value='no' />
                  <customization name='CAP_ODBC_BIND_FORCE_SMALL_STRING_BUFFERS' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_INT64' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_PREFERRED_TYPES' value='no' />
                  <customization name='CAP_ODBC_BIND_SUPPRESS_WIDE_CHAR' value='no' />
                  <customization name='CAP_ODBC_CURSOR_DYNAMIC' value='no' />
                  <customization name='CAP_ODBC_CURSOR_FORWARD_ONLY' value='no' />
                  <customization name='CAP_ODBC_CURSOR_KEYSET_DRIVEN' value='no' />
                  <customization name='CAP_ODBC_CURSOR_STATIC' value='no' />
                  <customization name='CAP_ODBC_DRIVER_HIVE_ASSUME_LATEST' value='no' />
                  <customization name='CAP_ODBC_ERROR_IGNORE_FALSE_ALARM' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_RESIZABLE' value='no' />
                  <customization name='CAP_ODBC_FETCH_BUFFERS_SIZE_MASSIVE' value='no' />
                  <customization name='CAP_ODBC_FETCH_CONTINUE_ON_ERROR' value='no' />
                  <customization name='CAP_ODBC_FORCE_SINGLE_ROW_BINDING' value='no' />
                  <customization name='CAP_ODBC_METADATA_STRING_LENGTH_UNKNOWN' value='no' />
                  <customization name='CAP_ODBC_METADATA_SUPPRESS_SQLCOLUMNS_API' value='no' />
                  <customization name='CAP_ODBC_METADATA_SUPPRESS_SQLFOREIGNKEYS_API' value='no' />
                  <customization name='CAP_ODBC_METADATA_SUPPRESS_SQLPRIMARYKEYS_API' value='no' />
                  <customization name='CAP_ODBC_METADATA_SUPPRESS_SQLSTATISTICS_API' value='no' />
                  <customization name='CAP_ODBC_QUERY_USE_PREPARE_PARAMETER_MARKER' value='no' />
                  <customization name='CAP_ODBC_REBIND_SKIP_UNBIND' value='no' />
                  <customization name='CAP_ODBC_TRIM_VARCHAR_PADDING' value='no' />
                  <customization name='CAP_ODBC_UNBIND_AUTO' value='no' />
                  <customization name='CAP_ODBC_UNBIND_BATCH' value='no' />
                  <customization name='CAP_ODBC_UNBIND_EACH' value='no' />
                  <customization name='CAP_ODBC_USE_NATIVE_PROTOCOL' value='no' />
                  <customization name='CAP_PADDED_SEMANTICS_NCHAR_NVARCHAR' value='no' />
                  <customization name='CAP_PERSIST_SQL_RELATION_ON_LEAF_CONNECTION' value='no' />
                  <customization name='CAP_QUERY_ALLOW_JOIN_REORDER' value='yes' />
                  <customization name='CAP_QUERY_ALLOW_PARTIAL_AGGREGATION' value='yes' />
                  <customization name='CAP_QUERY_ALWAYS_USE_AQ_CACHE' value='no' />
                  <customization name='CAP_QUERY_AVOID_EXPRESSION_INLINING' value='no' />
                  <customization name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES' value='no' />
                  <customization name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES' value='yes' />
                  <customization name='CAP_QUERY_BOOLEXPR_TO_INTEXPR' value='no' />
                  <customization name='CAP_QUERY_BOOL_IDENTIFIER_TO_LOGICAL' value='yes' />
                  <customization name='CAP_QUERY_CAST_MONEY_AS_NUMERIC' value='no' />
                  <customization name='CAP_QUERY_EMPTY_DOMAIN_TOP' value='no' />
                  <customization name='CAP_QUERY_FORCE_AGGREGATE_MEASURES' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_ALIAS' value='no' />
                  <customization name='CAP_QUERY_GROUP_BY_DEGREE' value='yes' />
                  <customization name='CAP_QUERY_HAVING_REQUIRES_GROUP_BY' value='no' />
                  <customization name='CAP_QUERY_HAVING_UNSUPPORTED' value='no' />
                  <customization name='CAP_QUERY_IGNORE_HINT_CHECK_NOT_NULL' value='no' />
                  <customization name='CAP_QUERY_IGNORE_HINT_MAKE_DOMAIN_PREDICATE' value='no' />
                  <customization name='CAP_QUERY_JOIN_ACROSS_SCHEMAS' value='yes' />
                  <customization name='CAP_QUERY_JOIN_ASSUME_CONSTRAINED' value='no' />
                  <customization name='CAP_QUERY_JOIN_PUSH_DOWN_CONDITION_EXPRESSIONS' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SCOPE' value='no' />
                  <customization name='CAP_QUERY_JOIN_REQUIRES_SUBQUERY' value='no' />
                  <customization name='CAP_QUERY_MINMAX_FORCE_GROUPBYS' value='no' />
                  <customization name='CAP_QUERY_NULL_REQUIRES_CAST' value='no' />
                  <customization name='CAP_QUERY_OUTER_JOIN_CONDITION_NO_TRIVIAL' value='yes' />
                  <customization name='CAP_QUERY_RECOMPILE_FAILED_QUERY' value='no' />
                  <customization name='CAP_QUERY_SELECT_ALIASES_SORTED' value='no' />
                  <customization name='CAP_QUERY_SORT_BY' value='yes' />
                  <customization name='CAP_QUERY_SORT_BY_DEGREE' value='no' />
                  <customization name='CAP_QUERY_SUBQUERIES' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERIES_WITH_TOP' value='yes' />
                  <customization name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT' value='yes' />
                  <customization name='CAP_QUERY_SUPPORTS_LODJOINS' value='yes' />
                  <customization name='CAP_QUERY_SUPPORT_ANALYTIC_FUNCTIONS' value='no' />
                  <customization name='CAP_QUERY_SUPPORT_EMPTY_GROUPBY' value='no' />
                  <customization name='CAP_QUERY_SUPPRESS_CHECK_DOMAIN_LITERALS_THRESHOLD' value='no' />
                  <customization name='CAP_QUERY_SUPPRESS_NULL_CHECK_QUERIES' value='no' />
                  <customization name='CAP_QUERY_TAGS_IN_SQL_TEXT' value='no' />
                  <customization name='CAP_QUERY_TIME_REQUIRES_CAST' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_LIMIT' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_ROWNUM' value='no' />
                  <customization name='CAP_QUERY_TOPSTYLE_TOP' value='no' />
                  <customization name='CAP_QUERY_TOP_0_METADATA' value='yes' />
                  <customization name='CAP_QUERY_TOP_N' value='yes' />
                  <customization name='CAP_QUERY_USE_DOMAIN_EXCEPT_OPTIMIZATION' value='yes' />
                  <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION' value='no' />
                  <customization name='CAP_QUERY_USE_DOMAIN_RANGES_OPTIMIZATION_STRINGS' value='no' />
                  <customization name='CAP_QUERY_USE_QUERY_FUSION' value='yes' />
                  <customization name='CAP_QUERY_WHERE_FALSE_METADATA' value='no' />
                  <customization name='CAP_RELDATEFILT_CASTTODATE' value='no' />
                  <customization name='CAP_RENAME_TABLE_USE_LEAF_CONNECTION_DIALECT' value='no' />
                  <customization name='CAP_SELECT_INTO' value='no' />
                  <customization name='CAP_SELECT_TOP_INTO' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_PREFER_TEMP_TABLE' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_REPAIR_TEMP_TABLE_STRINGS' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_BUFFER' value='no' />
                  <customization name='CAP_STORED_PROCEDURE_TEMP_TABLE_FROM_NEW_PROTOCOL' value='no' />
                  <customization name='CAP_SUPPRESS_CONNECTION_POOLING' value='yes' />
                  <customization name='CAP_SUPPRESS_DISCOVERY_QUERIES' value='no' />
                  <customization name='CAP_SUPPRESS_ENUMERATE_SCHEMAS_VIA_SQL' value='no' />
                  <customization name='CAP_SUPPRESS_ENUMERATE_TABLES_VIA_SQL' value='no' />
                  <customization name='CAP_SUPPRESS_GET_SERVER_TIME' value='yes' />
                  <customization name='CAP_SUPPRESS_QUICK_FILTER_ACCELERATION_VIEWS' value='no' />
                  <customization name='CAP_SUPPRESS_TEMP_TABLE_CHECKS' value='no' />
                </customizations>
              </connection-customization>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hadoophive.0v7q0iy0g1vfpp1bypnwh028bnq4' name='riskfactor' table='[default].[riskfactor]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='hadoophive.0v7q0iy0g1vfpp1bypnwh028bnq4' name='riskfactor' table='[default].[riskfactor]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>driverid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[driverid]</local-name>
            <parent-name>[riskfactor]</parent-name>
            <remote-alias>driverid</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>events</remote-name>
            <remote-type>20</remote-type>
            <local-name>[events]</local-name>
            <parent-name>[riskfactor]</parent-name>
            <remote-alias>events</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totmiles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totmiles]</local-name>
            <parent-name>[riskfactor]</parent-name>
            <remote-alias>totmiles</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>riskfactor</remote-name>
            <remote-type>4</remote-type>
            <local-name>[riskfactor]</local-name>
            <parent-name>[riskfactor]</parent-name>
            <remote-alias>riskfactor</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>1</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Risk Ranking' datatype='integer' name='[Calculation_428193867388456960]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([riskfactor]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='riskfactor' datatype='table' name='[__tableau_internal_object_id__].[riskfactor (default.riskfactor)_DD81F94605374521AA0521CF78150486]' role='measure' type='quantitative' />
      <column caption='Driverid' datatype='string' name='[driverid]' role='dimension' type='nominal' />
      <column caption='Events' datatype='integer' name='[events]' role='measure' type='quantitative' />
      <column caption='Riskfactor' datatype='real' name='[riskfactor]' role='measure' type='quantitative' />
      <column caption='Totmiles' datatype='integer' name='[totmiles]' role='measure' type='quantitative' />
      <column-instance column='[driverid]' derivation='None' name='[none:driverid:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:driverid:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;A30&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;A70&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;A73&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;A9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;A90&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A22&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A42&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A62&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A82&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A26&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A46&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A49&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A66&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A13&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A34&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A54&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A74&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A94&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A95&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A10&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A31&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A51&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A77&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A91&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A27&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A47&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A50&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A67&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A87&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;A100&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;A20&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;A40&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;A60&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;A80&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A23&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A43&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A63&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A83&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;A17&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;A38&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;A58&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;A78&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A28&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A48&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A68&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A69&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A88&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A14&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A55&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A75&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A97&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A15&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A36&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A56&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A76&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A96&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A98&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;A18&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;A39&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;A59&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;A79&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;A99&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;A21&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;A41&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;A61&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;A81&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A11&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A32&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A52&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A72&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A86&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A29&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A71&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A89&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A24&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A35&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A64&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A84&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;A16&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;A37&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;A57&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A12&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A33&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A53&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A92&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A93&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A25&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A44&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A45&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A65&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A85&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='saturday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='riskfactor' id='riskfactor (default.riskfactor)_DD81F94605374521AA0521CF78150486'>
            <properties context=''>
              <relation connection='hadoophive.0v7q0iy0g1vfpp1bypnwh028bnq4' name='riskfactor' table='[default].[riskfactor]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Risk Ranking vs Total Miles</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='riskfactor (default.riskfactor) (default)' name='federated.0tew4tt1gky89j14slaav0yubkj1' />
          </datasources>
          <datasource-dependencies datasource='federated.0tew4tt1gky89j14slaav0yubkj1'>
            <column caption='Risk Ranking' datatype='integer' name='[Calculation_428193867388456960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([riskfactor]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Driverid' datatype='string' name='[driverid]' role='dimension' type='nominal' />
            <column-instance column='[driverid]' derivation='None' name='[none:driverid:nk]' pivot='key' type='nominal' />
            <column caption='Riskfactor' datatype='real' name='[riskfactor]' role='measure' type='quantitative' />
            <column-instance column='[riskfactor]' derivation='Sum' name='[sum:riskfactor:qk]' pivot='key' type='quantitative' />
            <column-instance column='[totmiles]' derivation='Sum' name='[sum:totmiles:qk]' pivot='key' type='quantitative' />
            <column caption='Totmiles' datatype='integer' name='[totmiles]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_428193867388456960]' derivation='User' name='[usr:Calculation_428193867388456960:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.0tew4tt1gky89j14slaav0yubkj1].[driverid]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tew4tt1gky89j14slaav0yubkj1].[sum:riskfactor:qk]' included-values='in-range'>
            <min>2.0</min>
            <max>31.68572998046875</max>
          </filter>
          <filter class='categorical' column='[federated.0tew4tt1gky89j14slaav0yubkj1].[usr:Calculation_428193867388456960:ok:2]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='10' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='11' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='12' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='13' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='14' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='15' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='16' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='17' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='18' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='19' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='20' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='21' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='22' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='23' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='24' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='25' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='26' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='27' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='28' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='29' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='30' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='31' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='32' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='33' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='34' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='35' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='36' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='37' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='38' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='39' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='40' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='41' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='42' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='43' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='44' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='45' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='46' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='47' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='48' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='49' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='50' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='51' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='52' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='53' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='54' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='55' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='56' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='57' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='58' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='59' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='60' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='61' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='62' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='63' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='64' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='65' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='66' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='67' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='68' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='69' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='70' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='71' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='72' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='73' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='74' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='75' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='76' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='77' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='78' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='79' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='80' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='81' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='82' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='83' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='84' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='85' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='86' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='87' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='88' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='89' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='90' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='91' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='92' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='93' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='94' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='95' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='96' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='97' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='98' />
              <groupfilter function='member' level='[usr:Calculation_428193867388456960:ok:2]' member='99' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tew4tt1gky89j14slaav0yubkj1].[sum:riskfactor:qk]</column>
            <column>[federated.0tew4tt1gky89j14slaav0yubkj1].[usr:Calculation_428193867388456960:ok:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0tew4tt1gky89j14slaav0yubkj1].[sum:riskfactor:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0tew4tt1gky89j14slaav0yubkj1].[sum:riskfactor:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0tew4tt1gky89j14slaav0yubkj1].[usr:Calculation_428193867388456960:ok:2]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tew4tt1gky89j14slaav0yubkj1].[none:driverid:nk]' />
              <text column='[federated.0tew4tt1gky89j14slaav0yubkj1].[sum:riskfactor:qk]' />
              <text column='[federated.0tew4tt1gky89j14slaav0yubkj1].[sum:totmiles:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Driverid:&#9;Driver ID </run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Riskfactor:&#9;Total Risk    </run>
                <run bold='true'><![CDATA[<[federated.0tew4tt1gky89j14slaav0yubkj1].[sum:riskfactor:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Risk Ranking along Driverid:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0tew4tt1gky89j14slaav0yubkj1].[usr:Calculation_428193867388456960:ok:2]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>Risk Value: &lt;</run>
                <run bold='true'>[federated.0tew4tt1gky89j14slaav0yubkj1].[sum:riskfactor:qk]</run>
                <run bold='true'>&gt;, Driver ID: , Total Miles: &lt;</run>
                <run bold='true'>[federated.0tew4tt1gky89j14slaav0yubkj1].[sum:totmiles:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.0214917659759521' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tew4tt1gky89j14slaav0yubkj1].[usr:Calculation_428193867388456960:ok:2]</rows>
        <cols>[federated.0tew4tt1gky89j14slaav0yubkj1].[sum:riskfactor:qk]</cols>
      </table>
      <simple-id uuid='{39648A01-8C97-48FD-975E-AC667A86C0AA}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0tew4tt1gky89j14slaav0yubkj1].[none:driverid:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8DD10197-72A9-40FB-B344-6C6CD6EE4C11}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      jIFh0QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
